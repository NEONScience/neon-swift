# Generated by roxygen2: do not edit by hand

export(assert_all_are_classes)
export(assert_any_are_classes)
export(assert_is_S4)
export(assert_is_a_bool)
export(assert_is_a_complex)
export(assert_is_a_double)
export(assert_is_a_number)
export(assert_is_a_raw)
export(assert_is_a_string)
export(assert_is_all_of)
export(assert_is_an_integer)
export(assert_is_any_of)
export(assert_is_array)
export(assert_is_builtin_function)
export(assert_is_call)
export(assert_is_character)
export(assert_is_closure_function)
export(assert_is_complex)
export(assert_is_condition)
export(assert_is_data.frame)
export(assert_is_data.table)
export(assert_is_date)
export(assert_is_double)
export(assert_is_environment)
export(assert_is_error)
export(assert_is_expression)
export(assert_is_externalptr)
export(assert_is_factor)
export(assert_is_formula)
export(assert_is_function)
export(assert_is_inherited_from)
export(assert_is_integer)
export(assert_is_internal_function)
export(assert_is_language)
export(assert_is_leaf)
export(assert_is_list)
export(assert_is_logical)
export(assert_is_matrix)
export(assert_is_message)
export(assert_is_mts)
export(assert_is_name)
export(assert_is_numeric)
export(assert_is_one_sided_formula)
export(assert_is_ordered)
export(assert_is_pairlist)
export(assert_is_posixct)
export(assert_is_posixlt)
export(assert_is_primitive)
export(assert_is_qr)
export(assert_is_raster)
export(assert_is_raw)
export(assert_is_ref_class_generator)
export(assert_is_ref_class_object)
export(assert_is_relistable)
export(assert_is_s3_generic)
export(assert_is_s3_group_generic)
export(assert_is_s3_internal_generic)
export(assert_is_s3_method)
export(assert_is_s3_primitive_generic)
export(assert_is_s4)
export(assert_is_s4_group_generic)
export(assert_is_simple_error)
export(assert_is_simple_message)
export(assert_is_simple_warning)
export(assert_is_special_function)
export(assert_is_stepfun)
export(assert_is_symbol)
export(assert_is_table)
export(assert_is_tbl)
export(assert_is_tbl_cube)
export(assert_is_tbl_df)
export(assert_is_tbl_dt)
export(assert_is_try_error)
export(assert_is_ts)
export(assert_is_tskernel)
export(assert_is_two_sided_formula)
export(assert_is_warning)
export(is_S4)
export(is_a_bool)
export(is_a_complex)
export(is_a_double)
export(is_a_number)
export(is_a_raw)
export(is_a_string)
export(is_an_integer)
export(is_array)
export(is_builtin_function)
export(is_call)
export(is_character)
export(is_class)
export(is_closure_function)
export(is_complex)
export(is_condition)
export(is_data.frame)
export(is_data.table)
export(is_date)
export(is_double)
export(is_environment)
export(is_error)
export(is_expression)
export(is_externalptr)
export(is_factor)
export(is_formula)
export(is_function)
export(is_inherited_from)
export(is_integer)
export(is_internal_function)
export(is_language)
export(is_leaf)
export(is_list)
export(is_logical)
export(is_matrix)
export(is_message)
export(is_mts)
export(is_name)
export(is_numeric)
export(is_one_sided_formula)
export(is_ordered)
export(is_pairlist)
export(is_posixct)
export(is_posixlt)
export(is_primitive)
export(is_qr)
export(is_raster)
export(is_raw)
export(is_ref_class_generator)
export(is_ref_class_object)
export(is_relistable)
export(is_s3_generic)
export(is_s3_group_generic)
export(is_s3_internal_generic)
export(is_s3_method)
export(is_s3_primitive_generic)
export(is_s4)
export(is_s4_group_generic)
export(is_simple_error)
export(is_simple_message)
export(is_simple_warning)
export(is_special_function)
export(is_stepfun)
export(is_symbol)
export(is_table)
export(is_tbl)
export(is_tbl_cube)
export(is_tbl_df)
export(is_tbl_dt)
export(is_try_error)
export(is_ts)
export(is_tskernel)
export(is_two_sided_formula)
export(is_warning)
importFrom(assertive.base,assert_engine)
importFrom(assertive.base,bapply)
importFrom(assertive.base,cause)
importFrom(assertive.base,coerce_to)
importFrom(assertive.base,false)
importFrom(assertive.base,get_name_in_parent)
importFrom(assertive.base,is2)
importFrom(assertive.base,is_identical_to_true)
importFrom(assertive.properties,is_empty)
importFrom(assertive.properties,is_non_empty)
importFrom(assertive.properties,is_of_length)
importFrom(assertive.properties,is_scalar)
importFrom(codetools,findGlobals)
importFrom(methods,getGeneric)
importFrom(methods,is)
importFrom(methods,isClass)
importFrom(stats,is.stepfun)
