# Generated by roxygen2: do not edit by hand

S3method(as.character,file)
export(assert_all_are_dirs)
export(assert_all_are_empty_files)
export(assert_all_are_executable_files)
export(assert_all_are_existing_files)
export(assert_all_are_libraries)
export(assert_all_are_non_empty_files)
export(assert_all_are_readable_files)
export(assert_all_are_writable_files)
export(assert_all_file_sizes_are_in_range)
export(assert_any_are_dirs)
export(assert_any_are_empty_files)
export(assert_any_are_executable_files)
export(assert_any_are_existing_files)
export(assert_any_are_libraries)
export(assert_any_are_non_empty_files)
export(assert_any_are_readable_files)
export(assert_any_are_writable_files)
export(assert_any_file_sizes_are_in_range)
export(assert_is_bzfile_connection)
export(assert_is_connection)
export(assert_is_fifo_connection)
export(assert_is_file_connection)
export(assert_is_gzfile_connection)
export(assert_is_incomplete_connection)
export(assert_is_open_connection)
export(assert_is_pipe_connection)
export(assert_is_readable_connection)
export(assert_is_socket_connection)
export(assert_is_stderr)
export(assert_is_stdin)
export(assert_is_stdout)
export(assert_is_terminal_connection)
export(assert_is_text_connection)
export(assert_is_unz_connection)
export(assert_is_url_connection)
export(assert_is_writable_connection)
export(assert_is_xzfile_connection)
export(is_bzfile_connection)
export(is_connection)
export(is_dir)
export(is_empty_file)
export(is_ex_file)
export(is_executable_file)
export(is_existing_file)
export(is_fifo_connection)
export(is_file_connection)
export(is_file_size_in_range)
export(is_gzfile_connection)
export(is_incomplete_connection)
export(is_library)
export(is_non_empty_file)
export(is_open_connection)
export(is_pipe_connection)
export(is_readable_connection)
export(is_readable_file)
export(is_socket_connection)
export(is_stderr)
export(is_stdin)
export(is_stdout)
export(is_terminal_connection)
export(is_text_connection)
export(is_unz_connection)
export(is_url_connection)
export(is_writable_connection)
export(is_writable_file)
export(is_xzfile_connection)
importFrom(assertive.base,"cause<-")
importFrom(assertive.base,assert_engine)
importFrom(assertive.base,call_and_name)
importFrom(assertive.base,cause)
importFrom(assertive.base,coerce_to)
importFrom(assertive.base,false)
importFrom(assertive.base,get_name_in_parent)
importFrom(assertive.base,is2)
importFrom(assertive.base,is_true)
importFrom(assertive.base,set_cause)
importFrom(assertive.base,use_first)
importFrom(assertive.numbers,is_in_range)
